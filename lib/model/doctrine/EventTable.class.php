<?php

/**
 * EventTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EventTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EventTable
     */
    public static function getInstance(){
        return Doctrine_Core::getTable('Event');
    }
    
    public static function getPassAttendedByUser($user_id=0,$param=array()){
      $q = Doctrine_Query::create()
        ->from('Event e')
        ->innerJoin('e.EventAttendee ea')
        ->leftJoin('e.City c')
        ->where('ea.user_id = ?',$user_id)
        ->andWhere('e.event_date < CURRENT_DATE');
        
      if($param['venue']){
        $q->andWhere('e.venue LIKE ?','%'.$param['venue'].'%');
      }
      
      if($param['keyword']){
        $q->andWhere('e.address LIKE ?','%'.$param['keyword'].'%');
        $q->orWhere('e.description LIKE ?','%'.$param['keyword'].'%');
        $q->orWhere('e.description LIKE ?','%'.$param['keyword'].'%');
      }
      
      $pager = new sfDoctrinePager('Event', 10);
      $pager->setQuery($q);
      $pager->setPage($param['curPage']);
      $pager->init();
      return $pager;
    }
    
    public static function getAllEvent($type='all',$param=array()){
      $q = Doctrine_Query::create()
        ->select('e.*,(SELECT count(*) FROM eventAttendee ea WHERE ea.event_id = e.id) as countAttendee')
        ->from('Event e')
        ->leftJoin('e.City c')
        ->leftJoin('c.State s')
        ->where('1=1');
      
      if(isset($param['venue'])){
        $q->andWhere('e.venue LIKE ?','%'.$param['venue'].'%');
      }
      
      if(is_numeric($param['keyword'])){
        $q->andWhere('e.id = ?',$param['keyword']);
      }elseif(isset($param['keyword'])){
        $q->andWhere('e.description LIKE ?','%'.$param['keyword'].'%');
      }
      if(isset($param['state']) && $param['state'] > 0){
        $q->andWhere('c.state_id = ?',$param['state']);
      }
      if(isset($param['city']) && $param['city'] > 0){
        $q->andWhere('c.id = ?',$param['city']);
      }
      if($type == 'now'){
        $q->andWhere('e.event_date = CURRENT_DATE');
      }elseif($type == 'upcoming'){
        $q->andWhere('e.event_date > CURRENT_DATE');
      }elseif($type == 'past'){
        $q->andWhere('e.event_date < CURRENT_DATE');
      }
      
      $q->orderBy('e.event_date DESC');
            
      $pager = new sfDoctrinePager('Event', 5);
      $pager->setQuery($q);
      $pager->setPage($param['curPage']);
      $pager->init();
      return $pager;
    }
}