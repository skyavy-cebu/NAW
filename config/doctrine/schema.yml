User:  actAs:    Timestampable:  connection: doctrine  tableName: user  columns:    id: { type: integer(4), unsigned: true, primary: true, autoincrement: true }    email: { type: string(150), notnull: true, unique: true}    pass: { type: string(32), notnull: true }    fname: { type: string(150), notnull: true }    lname: { type: string(150), notnull: true }    dob: { type: date }    type_id: { type: enum, values: [0,1], notnull: true, default: 0 }    app_type: { type: integer(1), unsigned: true, notnull: true, default: 0 }    app_id: { type: string(150), notnull: true }    activation: { type: string(150), notnull: true }    last_login_at: { type: timestamp }    active: { type: enum, values: [0,1], notnull: true, default: 0 }  relations:    Profile: { class:Profile, local:id, foreign:id, type: one, onDelete: CASCADE, onUpdate: CASCADE }Profile:  actAs:    Timestampable:  connection: doctrine  tableName: profile  columns:    id: { type: integer(4), unsigned: true, primary: true}    title: { type: string(5), notnull: true }    company: { type: string(150), notnull: true }    position: { type: string(150), notnull: true }    phone: { type: string(150), notnull: true }    website: { type: string(150), notnull: true }    city_id: { type: integer(2), unsigned: true, notnull: true, default: 0 }    address: { type: string(255), notnull: true }    ido: { type: text }    to_meet: { type: text }    image_full: { type: string(150), notnull: true }    image_small: { type: string(150), notnull: true }    linkedin_url: { type: string(150), notnull: true }    fb_url: { type: string(150), notnull: true }    twitter_url: { type: string(150), notnull: true }    olio_url: {type: string(150), notnull: true }  relations:    User: { class:User, local:id, foreign:id, type: one, onDelete: CASCADE, onUpdate: CASCADE }    State: { class:State, local:state_id, foreign:id, type: one, onDelete: CASCADE, onUpdate: CASCADE }    City: { class:City, local:city_id, foreign:id, type: one, onDelete: CASCADE, onUpdate: CASCADE }State:  actAs:    Timestampable:  connection: doctrine  tableName: state  columns:    id: { type: integer(2), unsigned: true, primary: true, autoincrement: true }    code: { type: string(2), notnull: true }    name: { type: string(150), notnull: true }City:  actAs:    Timestampable:  connection: doctrine  tableName: city  columns:    id: { type: integer(2), unsigned: true, primary: true, autoincrement: true }    state_id: { type: integer(2), unsigned: true, notnull: true, default: 0 }    name: { type: string(150), notnull: true }  relations:    State: { class:State, local:state_id, foreign:id, type: one, onDelete: CASCADE, onUpdate: CASCADE }News:  actAs:    Timestampable:  connection: doctrine  tableName: news  columns:    id: { type: integer(2), unsigned: true, primary: true, autoincrement: true }    post_date: { type: timestamp }    title: { type: string(150), notnull: true }    content: { type: text }    image_full: { type: string(150), notnull: true }    image_small: { type: string(150), notnull: true }Sponsor:  actAs:    Timestampable:  connection: doctrine  tableName: sponsor  columns:    id: { type: integer(2), unsigned: true, primary: true, autoincrement: true }    position: { type: string(1), notnull: true }    company:  { type: string(150), notnull: true }    status_id: { type: enum, values: [0,1], notnull: true, default: 1 }    file: { type: string(150), notnull: true }    url:  { type: string(150), notnull: true }Event:  actAs:    Timestampable:  connection: doctrine  tableName: event  columns:    id: { type: integer(4), unsigned: true, primary: true, autoincrement: true }    description: { type: text }    event_date: { type: date }    start_time: { type: time }    end_time: { type: time }    city_id: { type: integer(2), unsigned: true, notnull: true, default: 0 }    venue: { type: string(150), notnull: true }    address: { type: string(255), notnull: true }    prepay_slots: { type: integer(2), unsigned: true, notnull: true, default: 0 }    max_capacity: { type: integer(2), unsigned: true, notnull: true, default: 0 }    admission_prepay: { type: decimal, notnull: true, default: 0}    admission_at_door: { type: decimal, notnull: true, default: 0}    admission_no_rsvp: { type: decimal, notnull: true, default: 0}    image_full: { type: string(150), notnull: true }    image_small: { type: string(150), notnull: true }    event_admin1: { type: integer(4), unsigned: true, notnull: true, default: 0 }    event_admin2: { type: integer(4), unsigned: true, notnull: true, default: 0 }  relations:    City: { class:City, local:city_id, foreign:id, type: one, onDelete: CASCADE, onUpdate: CASCADE }EventAttendee:  actAs:    Timestampable:  connection: doctrine  tableName: event_attendee  columns:    id: { type: integer(4), unsigned: true, primary: true, autoincrement: true }    event_id: { type: integer(4), unsigned: true, notnull: true, default: 0 }    user_id: { type: integer(4), unsigned: true, notnull: true, default: 0 }    paid: { type: enum, values: [0,1], notnull: true, default: 0 }  relations:    Event: { class:Event, local:event_id, foreign:id, type: one, onDelete: CASCADE, onUpdate: CASCADE }    User: { class:User, local:user_id, foreign:id, type: one, onDelete: CASCADE, onUpdate: CASCADE }    Industry:  actAs:    Timestampable:  connection: doctrine  tableName: industry  columns:    id: { type: integer(4), unsigned: true, primary: true, autoincrement: true }    name: { type: string(150), notnull: true }ProfileIndustry:  actAs:    Timestampable:  connection: doctrine  tableName: profile_industry  columns:    id: { type: integer(4), unsigned: true, primary: true, autoincrement: true }    user_id: { type: integer(4), unsigned: true, notnull: true, default: 0 }    industry_id: { type: integer(4), unsigned: true, notnull: true, default: 0 }    type_id: { type: enum, values: [0,1], notnull: true, default: 0 }  relations:    User: { class:User, local:user_id, foreign:id, type: one, onDelete: CASCADE, onUpdate: CASCADE }    Industry: { class:Industry, local:industry_id, foreign:id, type: one, onDelete: CASCADE, onUpdate: CASCADE }