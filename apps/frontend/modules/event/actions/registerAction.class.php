<?phpclass registerAction extends sfAction{  public function execute($request){    $event_id = $request->getParameter('id');    $this->event = Doctrine_Core::getTable('Event')->find($event_id);    if(!$this->event){      $this->forward404();    }    $this->user_registered = 0;    $this->user = $this->getUser()->getAccount();    if($this->user){      $eventAttendee = EventAttendeeTable::getInstance()->getAttedeeByEventIdAndUserId($event_id,$this->user->getId());      if($eventAttendee){        $this->user_registered = 1;      }else{        $this->registrationForm($request);      }    }else{      $this->registrationForm($request);    }  }    private function registrationForm($request){    $event_id = $request->getParameter('id');    $this->user = $this->getUser()->getAccount();    $this->form = new EventRegistrationForm($this->user);    if($request->isMethod('post')){      $this->form->bind($request->getParameter('event'));      if($this->form->isValid()){        $post = $request->getParameter('event');        //check if user exist        $user = Doctrine_Core::getTable('User')->findOneByEmail($post['email']);        if(!$user){          //add new user          $user = new User();          $user->setFname($post['fname']);          $user->setLname($post['lname']);          $user->setEmail($post['email']);          $user->setDob(date('Y-m-d',strtotime($post['dob'])));          $user->save();          $user_id = $user->getId();                    $profile = new Profile();          $profile->setId($user_id);          $profile->setCityId($post['city']);          $profile->save();                    $pi = new ProfileIndustry();          $pi->setTypeId(0);          $pi->setUserId($user_id);          $pi->setIndustryId($post['industry']);          $pi->save();                    $user = Doctrine_Core::getTable('User')->find($user_id);        }                $eventAttendee = EventAttendeeTable::getInstance()->getAttedeeByEventIdAndUserId($event_id,$user->getId());        if(!$eventAttendee){          $ea = new EventAttendee();          $ea->setEventId($event_id);          $ea->setUserId($user->getId());          $ea->setPaymentMethod($post['payment_method']);          $ea->save();        }        return $this->redirect('/event/registerDone/'.$event_id);      }    }  }}